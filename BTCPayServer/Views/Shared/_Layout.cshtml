@using BTCPayServer.Views.Server
@using BTCPayServer.Views.Stores
@using BTCPayServer.Views.Apps
@using BTCPayServer.Views.Invoice
@using BTCPayServer.Views.Manage
@using BTCPayServer.Views.PaymentRequest
@using BTCPayServer.Views.Wallets
@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject BTCPayServer.Services.BTCPayServerEnvironment Env
@inject ISettingsRepository SettingsRepository
@inject LinkGenerator linkGenerator

@{
    var theme = await SettingsRepository.GetTheme();
}

@functions {
    // The .NET function for inserting classes requires this to be async
    private async Task Logo(string classes = "")
    {
        <a href="~/" class="navbar-brand py-2 js-scroll-trigger @classes">
        <svg version="1.1" id="レイヤー_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 236.2 102.3" style="enable-background:new 0 0 236.2 102.3;" xml:space="preserve"> <style type="text/css">
        .st0{fill:#3AE1FD;}
        .st1{fill:#FFFFFF;}
        </style>
        <title>btcpay3</title>
        <g>
        <g>
        <path class="st0" d="M31.8,20.3C14.3,20.3,0,34.5,0,52.1s14.3,31.8,31.8,31.8s31.8-14.3,31.8-31.8S49.3,20.3,31.8,20.3z M17.8,37
        c0-7.7,6.3-14,14-14c7.7,0,14,6.3,14,14s-6.3,14-14,14C24.1,51,17.8,44.7,17.8,37z M2.6,52.1c0-11.9,7.2-22.2,17.4-26.7
        c-3,3-4.8,7.1-4.8,11.7c0,6,3.2,11.3,8,14.2c-5.6,2.7-7.7,5.9-7,10.8c0.7,5,3.9,7.9,8.9,8c4.3,0.1,8.6,0.1,13,0
        c2.1,0,4,0.5,5.4,2.1c2.1,2.3,2.3,4.5,1,6.2c-3.8,1.9-8.2,2.9-12.7,2.9C15.7,81.3,2.6,68.2,2.6,52.1z M47.4,76.8
        c-0.2-0.7-0.3-1.3-0.5-1.9c-1-4.2-3.9-6.5-8.2-6.6c-4.3-0.1-8.6,0-13-0.1c-5-0.1-7.8-2.8-7.7-7.6c0.1-4.7,2.8-7.3,7.7-7.4
        c0.9,0,1.8,0,2.7,0c1.1,0.2,2.2,0.3,3.4,0.3c9.1,0,16.6-7.4,16.6-16.6c0-4.5-1.8-8.7-4.8-11.7C53.9,29.9,61,40.2,61,52.1
        C61,62.5,55.6,71.6,47.4,76.8z"/>
        </g>
        <g>
        <path class="st1" d="M85.2,67.5c-10.1,0-12.5-2.3-12.5-13.8v-3.5c0-11.2,2.4-13.6,12.5-13.6h0.8c9.1,0,11.8,2,11.8,8.8v0.9h-5.6
        v-0.6c0-3.5-1-4.5-6.3-4.5h-0.6c-5.8,0-6.8,1.1-6.8,9.1v3.4c0,8,1,9.1,6.9,9.1h0.6c5.5,0,6.6-1,6.6-5.4v-1.9h-7.8v-4.2h13.3v5.5
        c0,8.6-2.4,10.6-12.2,10.6H85.2z"/>
        <path class="st1" d="M126.8,67.2h-5.7V63c0-5.7-0.8-6.5-6.1-6.5h-6.3v10.6H103V37h13.8c8.2,0,10,2.1,10,8.7v0.8
        c0,4.7-1.3,6.8-4.3,7.4v0.2c3.5,0.6,4.3,2.1,4.3,7.9V67.2z M116.2,52.3c3.8,0,4.8-1.1,4.8-4.8v-1c0-4.4-1-5.1-5.5-5.1h-6.8v10.9
        H116.2z"/>
        <path class="st1" d="M155.6,58.7c0,7-2.1,8.7-10.7,8.7h-1.1c-10.8,0-12.3-1.4-12.3-8.4v-1.4h5.4v1.1c0,3.6,1,4.3,6.4,4.3h0.8
        c5,0,5.9-0.7,5.9-4.1v-0.6c0-3-0.8-3.8-7.4-4.3c-9.4-0.7-11-2.7-11-8.6v-0.7c0-5.9,2.1-8.1,10.6-8.1h1.2c9.8,0,11.4,1.9,11.4,8.2
        v1.2h-5.4v-0.9c0-3.2-0.9-4.1-5.9-4.1h-0.8c-4.7,0-5.6,0.7-5.6,3.8v0.6c0,2.8,0.7,3.4,7.3,3.9c9.4,0.8,11.1,2.4,11.1,8.6V58.7z"/>
        <path class="st1" d="M166,67.2h-5.7V37h12.5c9.1,0,11.2,1.6,11.2,9.5V48c0,7.9-2.4,9.5-10.9,9.5H166V67.2z M172.4,53
        c5.2,0,6-1,6-5v-1.6c0-4.2-0.8-5-6-5H166V53H172.4z"/>
        <path class="st1" d="M212.4,67.2h-6.1l-2-6.3h-12.8l-2,6.3h-5.9L194,37h8.1L212.4,67.2z M203,56.6l-4.9-15.4h-0.3l-5.1,15.4H203z"
        />
        <path class="st1" d="M225.5,67.2h-5.8V57l-10.6-20h6.2l7.3,14.9h0.1l7.1-14.9h6.3l-10.6,20V67.2z"/>
        </g>
        </g>
        </svg>
            @if (Env.NetworkType != NBitcoin.ChainName.Mainnet)
            {
                <span class="badge bg-warning" style="font-size:10px;">@Env.NetworkType.ToString()</span>
            }
        </a>
    }
}

<!DOCTYPE html>
<html lang="en"@(Env.IsDeveloping ? " data-devenv" : "")>
<head>
    <partial name="LayoutHead" />
    @await RenderSectionAsync("PageHeadContent", false)
</head>
<body id="page-top">
    @{
        if (ViewBag.AlwaysShrinkNavBar == null)
        {
            ViewBag.AlwaysShrinkNavBar = true;
        }
        var additionalStyle = ViewBag.AlwaysShrinkNavBar ? "navbar-shrink always-shrinked" : "";
    }
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg fixed-top py-2 @additionalStyle" id="mainNav">
        <div class="container">
            @* Logo on Mobile *@
            @{ await Logo("d-lg-none"); }
            <button class="navbar-toggler navbar-toggler-right border-0 shadow-none p-2" type="button" data-bs-toggle="offcanvas" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                <img src="~/img/logo.png" height="45">
            </button>
            <div id="navbarResponsive" class="offcanvas offcanvas-fade border-0" data-bs-scroll="true" tabindex="-1">
                <div class="container">
                    <div class="offcanvas-header">
                        <div class="offcanvas-title" id="offcanvasLabel">
                            @* Logo in Offcanvas *@
                            @{ await Logo(); }
                        </div>
                        <button type="button" class="btn-close shadow-none m-0" data-bs-dismiss="offcanvas" aria-label="Close" style="padding:.8125rem;">
                            <vc:icon symbol="close"/>
                        </button>
                    </div>
                    <div class="offcanvas-body d-lg-flex w-100 align-items-center justify-content-between">
                        @* Logo on Desktop *@
                        @{ await Logo("d-none d-lg-inline-block"); }
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <ul class="navbar-nav">
                                @if (User.IsInRole(Roles.ServerAdmin))
                                {
                                    <li class="nav-item"><a asp-area="" asp-controller="Server" asp-action="ListUsers" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(ServerNavPages))" id="ServerSettings">Server settings</a></li>
                                }
                                <li class="nav-item"><a asp-area="" asp-controller="UserStores" asp-action="ListStores" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(StoreNavPages))" id="Stores">Stores</a></li>
                                <li class="nav-item"><a asp-area="" asp-controller="Apps" asp-action="ListApps" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(AppsNavPages))" id="Apps">Apps</a></li>
                                <li class="nav-item"><a asp-area="" asp-controller="Wallets" asp-action="ListWallets" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(WalletsNavPages))" id="Wallets">Wallets</a></li>
                                <li class="nav-item"><a asp-area="" asp-controller="Invoice" asp-action="ListInvoices" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(InvoiceNavPages))" id="Invoices">Invoices</a></li>
                                <li class="nav-item"><a asp-area="" asp-controller="PaymentRequest" asp-action="GetPaymentRequests" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(PaymentRequestsNavPages))" id="PaymentRequests">Payment Requests</a></li>
                                <vc:ui-extension-point location="header-nav"/>
                            </ul>
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="Manage" asp-action="Index" title="My settings" class="nav-link js-scroll-trigger @ViewData.IsActiveCategory(typeof(ManageNavPages))" id="MySettings"><span class="d-lg-none d-sm-block">Account</span><i class="fa fa-user d-lg-inline-block d-none"></i></a>
                                </li>
                                <vc:notifications-dropdown/>
                                @if (!theme.CustomTheme)
                                {
                                    <li class="nav-item">
                                        <button class="btcpay-theme-switch nav-link">
                                            <span class="d-lg-none d-sm-block"><span class="btcpay-theme-switch-dark">Dark theme</span><span class="btcpay-theme-switch-light">Light theme</span></span>
                                            <svg class="d-lg-inline-block d-none" xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10">
                                                <path class="btcpay-theme-switch-dark" transform="translate(1 1)" d="M2.72 0A3.988 3.988 0 000 3.78c0 2.21 1.79 4 4 4 1.76 0 3.25-1.14 3.78-2.72-.4.13-.83.22-1.28.22-2.21 0-4-1.79-4-4 0-.45.08-.88.22-1.28z"/>
                                                <path class="btcpay-theme-switch-light" transform="translate(1 1)" d="M4 0c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5S4.28 0 4 0zM1.5 1c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm5 0c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM4 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM.5 3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 0c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM1.5 6c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm5 0c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM4 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5S4.28 7 4 7z"/>
                                            </svg>
                                        </button>
                                    </li>
                                }
                                <li class="nav-item">
                                    <a asp-area="" asp-controller="Account" asp- asp-action="Logout" title="Logout" class="nav-link js-scroll-trigger" id="Logout"><span class="d-lg-none d-sm-block">Logout</span><i class="fa fa-sign-out d-lg-inline-block d-none"></i></a>
                                </li>
                            </ul>
                        }
                        else if (Env.IsSecure)
                        {
                            <ul class="navbar-nav">
                                @if (!(await SettingsRepository.GetPolicies()).LockSubscription)
                                {
                                    <li class="nav-item"><a asp-area="" asp-controller="Account" asp-action="Register" class="nav-link js-scroll-trigger" id="Register">Register</a></li>
                                }
                                <li class="nav-item"><a asp-area="" asp-controller="Account" asp-action="Login" class="nav-link js-scroll-trigger" id="Login">Log in</a></li>
                                <vc:ui-extension-point location="header-nav"/>
                            </ul>
                        }
                    </div>
                </div>
            </div>
            <div id="badUrl" class="alert alert-danger alert-dismissible" style="display:none; position:absolute; top:75px;" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
                    <vc:icon symbol="close" />
                </button>
                <span>GRSPay is expecting you to access this website from <b>@(Env.ExpectedProtocol)://@(Env.ExpectedHost)/</b>. If you use a reverse proxy, please set the <b>X-Forwarded-Proto</b> header to <b id="browserScheme">@(Env.ExpectedProtocol)</b> (<a href="https://docs.btcpayserver.org/FAQ/FAQ-Deployment/#cause-3-btcpay-is-expecting-you-to-access-this-website-from" target="_blank" class="alert-link" rel="noreferrer noopener">More information</a>)</span>
            </div>
            @if (!Env.IsSecure)
            {
                <div class="alert alert-danger alert-dismissible" style="position:absolute; top:75px;" role="alert">
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
                        <vc:icon symbol="close" />
                    </button>
                    <span>
                        Your access to GRSPay Server is over an unsecured network. If you are using the docker deployment method with NGINX and HTTPS is not available, you probably did not configure your DNS settings correctly. <br/>
                        We disabled the register and login link so you don't leak your credentials.
                    </span>
                </div>
            }
        </div>
    </nav>

    @RenderBody()

    @if (User.Identity.IsAuthenticated)
    {
        <footer class="btcpay-footer">
            <div class="container">
                <div class="d-flex flex-column justify-content-between flex-lg-row py-1">
                    <div class="d-flex justify-content-center justify-content-lg-start mb-2 mb-lg-0">
                        <a href="https://github.com/groestlcoin/btcpayserver" class="d-flex align-items-center me-4" target="_blank" rel="noreferrer noopener">
                            <vc:icon symbol="github" />
                            <span style="margin-left:.4rem">Github</span>
                        </a>
                        <a href="https://twitter.com/GroestlcoinTeam" class="d-flex align-items-center" target="_blank" rel="noreferrer noopener">
                            <vc:icon symbol="twitter" />
                            <span style="margin-left:.4rem">Twitter</span>
                        </a>
                    </div>
                    <div class="text-center text-lg-start">@Env.ToString()</div>
                </div>
            </div>
        </footer>
    }

    <partial name="LayoutFoot" />

    @await RenderSectionAsync("PageFootContent", false)
    <partial name="LayoutPartials/SyncModal" />

    @{
        var notificationDisabled = (await SettingsRepository.GetPolicies()).DisableInstantNotifications;
        if (!notificationDisabled)
        {
            var user = await UserManager.GetUserAsync(User);
            notificationDisabled = user?.DisabledNotifications == "all";
        }
    }

    <script type="text/javascript">
        const expectedDomain = @Safe.Json(Env.ExpectedHost);
        const expectedProtocol = @Safe.Json(Env.ExpectedProtocol);
        if (window.location.host !== expectedDomain || window.location.protocol !== expectedProtocol + ":") {
            document.getElementById("badUrl").style.display = "block";
            document.getElementById("browserScheme").innerText = window.location.protocol.substr(0, window.location.protocol.length -1);
        }
    </script>
    @if (!notificationDisabled)
    {
    <script>
        var supportsWebSockets = 'WebSocket' in window && window.WebSocket.CLOSING === 2;
        if (supportsWebSockets) {

            var loc = window.location, ws_uri;
            if (loc.protocol === "https:") {
                ws_uri = "wss:";
            } else {
                ws_uri = "ws:";
            }
            ws_uri += "//" + loc.host;
            ws_uri += "@linkGenerator.GetPathByAction("SubscribeUpdates", "Notifications")";
            var newDataEndpoint = "@linkGenerator.GetPathByAction("GetNotificationDropdownUI", "Notifications")";

            try {
                socket = new WebSocket(ws_uri);
                socket.onmessage = function (e) {
                    $.get(newDataEndpoint, function (data) {
                        $("#notifications-nav-item").replaceWith($(data));
                    });
                };
                socket.onerror = function (e) {
                    console.error("Error while connecting to websocket for notifications (callback)", e);
                };
            }
            catch (e) {
                console.error("Error while connecting to websocket for notifications", e);
            }
        }
    </script>
    }
</body>
</html>
