@model ChargeServiceViewModel
@{
    ViewData.SetActivePage(ServerNavPages.Services, "Lightning charge service");
}

<h3 class="mb-4">@ViewData["Title"]</h3>

<div class="row">
    <div class="col-md-8">
        @if (!ViewContext.ModelState.IsValid)
        {
            <div asp-validation-summary="All"></div>
        }
        <div class="form-group">
            <p>Lightning charge is a simple API for invoicing on lightning network, you can use it with several plugins:</p>
            <ul>
                <li><a href="https://github.com/Groestlcoin/woocommerce-gateway-lightning" target="_blank" rel="noreferrer noopener">WooCommerce Lightning Gateway</a>: A comprehensive e-commerce application that integrates with stock-management and order-tracking systems</li>
                <li><a href="https://github.com/Groestlcoin/nanopos" target="_blank" rel="noreferrer noopener">Nanopos</a>: A simple point-of-sale system for fixed-price goods</li>
                <li><a href="https://github.com/Groestlcoin/filebazaar" target="_blank" rel="noreferrer noopener">FileBazaar</a>: A system for selling files such as documents, images, and videos</li>
                <li><a href="https://github.com/Groestlcoin/wordpress-lightning-publisher" target="_blank" rel="noreferrer noopener">Lightning Publisher for WordPress</a>: A patronage model for unlocking WordPress blog entries</li>
                <li><a href="https://github.com/Groestlcoin/lightning-jukebox" target="_blank" rel="noreferrer noopener">Lightning Jukebox</a>: A fun demo that reimagines a classic technology for the Lightning Network</li>
                <li><a href="https://github.com/Groestlcoin/nanotip" target="_blank" rel="noreferrer noopener">Nanotip</a>: The simple tip jar, rebuilt to issue Lightning Network invoices</li>
            </ul>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-8">
        <h4>Credentials</h4>
        @if (Model.Uri != null)
        {
            <div class="form-group">
                <label asp-for="Uri" class="form-label"></label>
                <input asp-for="Uri" class="form-control" readonly />
            </div>
        }
        @if (Model.APIToken != null)
        {
            <div class="form-group">
                <label asp-for="APIToken" class="form-label"></label>
                <input asp-for="APIToken" class="form-control" readonly />
            </div>
        }
        @if (Model.AuthenticatedUri != null)
        {
            <div class="form-group">
                <label asp-for="AuthenticatedUri" class="form-label"></label>
                <input asp-for="AuthenticatedUri" class="form-control" readonly />
            </div>
        }
    </div>
</div>
